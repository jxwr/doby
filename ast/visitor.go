package ast

type Visitor interface {
	VisitIdent(node *Ident)
	VisitBasicLit(node *BasicLit)
	VisitParenExpr(node *ParenExpr)
	VisitSelectorExpr(node *SelectorExpr)
	VisitIndexExpr(node *IndexExpr)
	VisitSliceExpr(node *SliceExpr)
	VisitCallExpr(node *CallExpr)
	VisitUnaryExpr(node *UnaryExpr)
	VisitBinaryExpr(node *BinaryExpr)
	VisitArrayExpr(node *ArrayExpr)
	VisitSetExpr(node *SetExpr)
	VisitDictExpr(node *DictExpr)
	VisitFuncDeclExpr(node *FuncDeclExpr)
	VisitExprStmt(node *ExprStmt)
	VisitSendStmt(node *SendStmt)
	VisitIncDecStmt(node *IncDecStmt)
	VisitAssignStmt(node *AssignStmt)
	VisitGoStmt(node *GoStmt)
	VisitReturnStmt(node *ReturnStmt)
	VisitBranchStmt(node *BranchStmt)
	VisitBlockStmt(node *BlockStmt)
	VisitIfStmt(node *IfStmt)
	VisitCaseClause(node *CaseClause)
	VisitSwitchStmt(node *SwitchStmt)
	VisitSelectStmt(node *SelectStmt)
	VisitForStmt(node *ForStmt)
	VisitRangeStmt(node *RangeStmt)
}
